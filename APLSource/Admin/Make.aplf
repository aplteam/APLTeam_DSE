 {refToMakeHelpers}Make flag;M;C;path;zipFilename;res;parms;noOf;answer;q;aplVersion;copyToPath;myUcmdFolder;name;targetPath
⍝ "Make"s this projects.
⍝ You may pass a ref pointing to `MakeHelpers` as `⍺`.
⍝ If you don't, the function checks whether it's available in `⎕SE`.
⍝ If it is, the user is asked whether she wants to use that.
⍝ If she refuses or if it's not available in `⎕SE`, then the function
⍝ attempts to load the package into `⎕SE` with ]Tatin.LoadPackages.
⍝ The function rebuilds the workpsace, destroying it in the process.
 ⎕IO←1 ⋄ ⎕ML←1
 :If flag
     aplVersion←'18.2'
     ('Invalid version of APL, use ',aplVersion)⎕SIGNAL 11/⍨aplVersion≢{⍵/⍨2>+\'.'=⍵}2⊃# ⎕WG'APLVersion '
     :Section  ⍝ Establish ref to "MakeHelpers"
         :If 0=⎕NC'refToMakeHelpers'
             :If 9=⎕SE.⎕NC'MakeHelpers'
                 flag←¯1
                 :Repeat
                     answer←⍞,0/⍞←q←'Do you want to use "MakeHelpers" ',⎕SE.MakeHelpers.Version,' in ⎕SE (n=re-load) (Y/n)?'
                     answer←(≢q)↓answer
                     :If 0=≢answer
                     :OrIf 'Yy'∊⍨¯1↑answer
                         flag←1
                     :ElseIf 'Nn'∊⍨¯1↑answer
                         flag←0
                     :EndIf
                 :Until flag∊0 1
                 :If flag
                     M←⎕SE.MakeHelpers
                 :Else
                     noOf←⎕SE.Tatin.LoadPackages'MakeHelpers'⎕SE
                     'Could not load the package "MakeHelpers"'⎕SIGNAL 6/⍨0=noOf
                     M←⎕SE.MakeHelpers
                 :EndIf
             :Else
                 noOf←⎕SE.Tatin.LoadPackages'MakeHelpers'⎕SE
                 'Could not load the package "MakeHelpers"'⎕SIGNAL 6/⍨0=noOf
                 M←⎕SE.MakeHelpers
             :EndIf
         :Else
             M←refToMakeHelpers
         :EndIf
     :EndSection
     ⎕←'Using "MakeHelpers" version ',⎕SE.MakeHelpers.Version
     C←##.CiderConfig
 :AndIf 1 M.YesOrNo'Sure you want to create a new version? The workspace will be destroyed in the process!'
     :If (⊂'#.aplteam')∊{⍵[;1]}⎕SE.Link.Status''
         ⎕SE.Link.Break'#.aplteam'
     :EndIf
     targetPath←##.CiderConfig.HOME,'/Dist/'
     copyToPath←'expand'M.##.F.NormalizePath ##.CiderConfig.HOME,'/../../../DSE/'
     myUcmdFolder←M.GetMyUCMDsFolder''
     name←'aplteam18'
     path←C.HOME,'/',C.CIDER.distributionFolder
     M.RecreateFolder path
     ⎕WSID←targetPath,'/',name,'.dws'
     M.##.F.PolishCurrentDir
     {}M.IncreaseBuildIDInFunction'#.aplteam.aplteam.Version'
     ⎕LX←''
     ⎕EX'M'
     0 ⎕SAVE ⎕WSID
     #.⎕EX #.⎕NL⍳16
     '#.aplteam.aplteam'#.⎕CY ⎕WSID
     0 ⎕SAVE ⎕WSID
     M←⎕SE.MakeHelpers
     {}M.RecreateFolder copyToPath,'Snippets\'
     (C.HOME,'/Snippets/')M.CopyTo copyToPath
     (C.HOME,'/Snippets/')M.CopyTo targetPath
     (C.HOME,'/packages')M.CopyPackageFolderTo targetPath,'/packages'
     :If 1 M.YesOrNo'Copy WS, F-Key defs & packages over to MyUCMDs\?'
         {}M.RecreateFolder myUcmdFolder,'/APLTeam/'
         (targetPath,name,'.dws')M.CopyTo myUcmdFolder,'/APLTeam/'
         (copyToPath,'Snippets')M.CopyTo myUcmdFolder,'/APLTeam/'
         (C.HOME,'/APLsource/aplteam/FKeys/FunctionKeyDefinition.aplc')M.CopyTo myUcmdFolder,'/APLTeam/'
         (targetPath,'packages')M.CopyTo myUcmdFolder,'/APLTeam/'
     :EndIf
     ⎕CLEAR
 :EndIf
